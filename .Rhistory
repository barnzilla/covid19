)
str(d$asked_to_peer_review_compared_to_before)
# Compute descriptives for table 1
table1 <- bind_rows(
apply(
data.frame(
variable = c(
"skip",
"age",
"gender",
"country_reduced",
"occupation_reduced",
"income_factor",
"skip",
"asked_to_peer_review_compared_to_before"
),
variable_label = c(
"Demographic variable",
"Age",
"Gender",
"Country",
"Occupation",
"Salary",
"Outcome variable",
"Peer-review requests"
)
),
1,
function(x) get_descriptives(
x[1],
x[2],
heading = ifelse(x[2] %in% c("Demographic variable", "Outcome variable"), TRUE, FALSE),
sort = ifelse(x[2] %in% c("Salary"), FALSE, TRUE)
)
)
)
# Compute descriptives for table 1
table1 <- bind_rows(
apply(
data.frame(
variable = c(
"skip",
"age",
"gender",
"country_reduced",
"occupation_reduced",
"income_factor",
"skip",
"asked_to_peer_review_compared_to_before"
),
variable_label = c(
"Demographic variable",
"Age",
"Gender",
"Country",
"Occupation",
"Salary",
"Outcome variable",
"Peer-review requests"
)
),
1,
function(x) get_descriptives(
x[1],
x[2],
heading = ifelse(x[2] %in% c("Outcome variable"), TRUE, FALSE),
sort = ifelse(x[2] %in% c("Salary"), FALSE, TRUE)
)
)
)
# Compute descriptives for table 1
table1 <- bind_rows(
apply(
data.frame(
variable = c(
"skip",
"age",
"gender",
"country_reduced",
"occupation_reduced",
"income_factor",
"skip",
"asked_to_peer_review_compared_to_before"
),
variable_label = c(
"Demographic variable",
"Age",
"Gender",
"Country",
"Occupation",
"Salary",
"Outcome variable",
"Peer-review requests"
)
),
1,
function(x) get_descriptives(
x[1],
x[2],
heading = FALSE,
sort = ifelse(x[2] %in% c("Salary"), FALSE, TRUE)
)
)
)
get_descriptives <- function(variable_name, variable_label, heading = FALSE, sort = TRUE) {
if(variable_name != "skip") {
v <- eval(parse(text = paste0("d$", variable_name)))
}
if(variable_name == "skip") {
output <- data.frame(
Variable = paste0("<em>", variable_label, "</em>"),
N = NA,
Missing = NA,
Median = NA,
MAD = NA,
"Proportion (%)" = NA
)
} else if(class(v) %in% c("character", "factor")) {
if(class(v) %in% c("character")) v <- factor(v)
tab <- as.data.frame(
t(
t(
table(v)
)
),
stringsAsFactors = FALSE
)
output <- data.frame(
variable = paste0("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;", tab$v),
n = tab$Freq,
stringsAsFactors = FALSE
)
if(isTRUE(sort)) output <- output %>% arrange(desc(n))
output$proportion <- format(round(output$n / sum(output$n) * 100, 1), nsmall = 1)
output$missing <- rep(NA, nrow(output))
output$median <- rep(NA, nrow(output))
output$mad <- rep(NA, nrow(output))
output <- output %>% relocate(median, mad, .after = variable)
output <- bind_rows(
output[which(! str_detect(output$variable, "Other")),],
output[which(str_detect(output$variable, "Other")),]
)
output <- bind_rows(
data.frame(variable = variable_label, n = sum(! is.na(v)), missing = sum(is.na(v)), median = NA, mad = NA, proportion = NA),
output
)
} else {
output <- data.frame(
variable = paste0(variable_label, " (range ", as.integer(min(v, na.rm=TRUE)), "-", as.integer(max(v, na.rm=TRUE)), ")"),
n = sum(! is.na(v)),
missing = sum(is.na(v)),
median = format(round(median(v, na.rm = TRUE), 1), nsmall = 1),
mad = format(round(mad(v, na.rm = TRUE), 2), nsmall = 1),
proportion = NA
)
}
rownames(output) <- NULL
names(output) <- c("Variable", "N", "Missing", "Median", "MAD", "Proportion (%)")
output <- output %>% relocate("Proportion (%)", .after = N)
output[which(names(output) %in% c("Median", "MAD", "Proportion (%)"))] <- apply(output[which(names(output) %in% c("Median", "MAD", "Proportion (%)"))], 1:2, function(x) {
if(is.na(x)) {
if(isTRUE(heading)) output <- "" else output <- "&#8211;"
} else {
y <- as.numeric(x)
output <- format(y, big.mark = ",", nsmall = 1)
}
return(output)
})
output[which(names(output) %in% c("N", "Missing"))] <- apply(output[which(names(output) %in% c("N", "Missing"))], 1:2, function(x) {
if(is.na(x)) {
if(isTRUE(heading)) output <- "" else output <- "&#8211;"
} else {
output <- as.character(x)
}
return(output)
})
return(output)
}
# Compute descriptives for table 1
table1 <- bind_rows(
apply(
data.frame(
variable = c(
"skip",
"age",
"gender",
"country_reduced",
"occupation_reduced",
"income_factor",
"skip",
"asked_to_peer_review_compared_to_before"
),
variable_label = c(
"Demographic variable",
"Age",
"Gender",
"Country",
"Occupation",
"Salary",
"Outcome variable",
"Peer-review requests"
)
),
1,
function(x) get_descriptives(
x[1],
x[2],
heading = ifelse(x[2] %in% c("Demographic variable", "Outcome variable"), TRUE, FALSE),
sort = ifelse(x[2] %in% c("Salary"), FALSE, TRUE)
)
)
)
# Replace select characters in table1
table1$Variable <- gsub("\u2265", "&#8805;", table1$Variable)
# Render table
kbl(
x = table1,
caption = paste0("<span style='color: #333333;'><strong>Table 1</strong>. Demographic information of participants (n=", nrow(d), ").</span>"),
escape = FALSE,
align = c("l", rep("r", 6))
) %>%
kable_styling(
bootstrap_options = c("striped", "hover")
) %>%
footnote(general = "MAD = median absolute deviation")
names(d)
median(d_reduced$income_integer)
90000/1950
# Compute descriptives for table 1
table1 <- bind_rows(
apply(
data.frame(
variable = c(
"skip",
"age",
"gender",
"country_reduced",
"occupation_reduced",
"income_factor",
"skip",
"asked_to_peer_review_compared_to_before",
"agree_to_peer_review_compared_to_before"
),
variable_label = c(
"Demographic variable",
"Age",
"Gender",
"Country",
"Occupation",
"Salary",
"Outcome variable",
"Asked to peer-review (during pandemic vs. pre-pandemic)",
"Agreed to peer-review (during pandemic vs. pre-pandemic)"
)
),
1,
function(x) get_descriptives(
x[1],
x[2],
heading = ifelse(x[2] %in% c("Demographic variable", "Outcome variable"), TRUE, FALSE),
sort = ifelse(x[2] %in% c("Salary"), FALSE, TRUE)
)
)
)
View(table1)
d$asked_to_peer_review_how_often
ggplot(d, aes(asked_to_peer_review_how_often)) +
geom_freqpoly(binwidth = 500)
range(d$asked_to_peer_review_how_often)
range(d$asked_to_peer_review_how_often, na.rm = T)
ggplot(d, aes(asked_to_peer_review_how_often)) +
geom_histogram(binwidth = 500)
table(d$asked_to_peer_review_how_often)
sjp.frq(d$income_integer, coord.flip = FALSE, show.na = TRUE, expand.grid = TRUE, axis.title = "Age (years)", geom.colors = c("#484848"), type = "histogram")
library(sjPlot)
set_theme(axis.angle.x = 0, geom.label.size = 2, axis.textsize = .75)
sjp.frq(d$income_integer, coord.flip = FALSE, show.na = TRUE, expand.grid = TRUE, axis.title = "Age (years)", geom.colors = c("#484848"), type = "histogram")
browseVignettes("sjPlot")
set_theme(base = theme_light())
plot_frq(d$asked_to_peer_review_how_often)
?set_theme
set_theme(base = theme_minimal())
plot_frq(d$asked_to_peer_review_how_often)
?set_theme
set_theme(
base = theme_minimal(),
geom.label.angle = 45
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.label.size = 1
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.label.size = 2
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.label.size = 2.5
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.label.size = 2.5,
axis.angle.x = 45,
axis.textsize.x = 2.5
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.label.size = 2.5,
axis.angle.x = 45,
axis.textsize.x = 0.5
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 1
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 0.7
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 0.8
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 0.8,
axis.textsize.y = 0.8
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.boxoutline.color = NULL,
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 0.8,
axis.textsize.y = 0.8
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.boxoutline.color = "red",
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 0.8,
axis.textsize.y = 0.8
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.boxoutline.size = 0,
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 0.8,
axis.textsize.y = 0.8
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.outline.size = 0,
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 0.8,
axis.textsize.y = 0.8
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.outline.size = 0,
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 0.8,
axis.textsize.y = 0.8
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.outline.size = 0,
geom.boxoutline.size = 0,
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 0.8,
axis.textsize.y = 0.8
)
plot_frq(d$asked_to_peer_review_how_often)
set_theme(
base = theme_minimal(),
geom.outline.size = 0,
geom.outline.color = "white",
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 0.8,
axis.textsize.y = 0.8
)
plot_frq(d$asked_to_peer_review_how_often)
?plot_frq
plot_frq(
data = d$asked_to_peer_review_how_often,
axis.labels = c("Asked to peer-review")
)
plot_frq(
data = d$asked_to_peer_review_how_often,
axis.title = c("freq", "var")
)
plot_frq(
data = d$asked_to_peer_review_how_often,
axis.title = c("How often are you asked to review a manuscript(s)")
)
set_theme(
base = theme_minimal(),
geom.outline.color = "white",
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 0.8,
axis.textsize.y = 0.8,
axis.title.size = 1
)
plot_frq(
data = d$asked_to_peer_review_how_often,
axis.title = c("How often are you asked to review a manuscript(s)")
)
set_theme(
base = theme_minimal(),
geom.outline.color = "white",
geom.label.size = 2.1,
axis.angle.x = 45,
axis.textsize.x = 0.8,
axis.textsize.y = 0.8,
axis.title.size = 0.8
)
plot_frq(
data = d$asked_to_peer_review_how_often,
axis.title = c("How often are you asked to review a manuscript(s)")
)
# Render frequency plot
plot_frq(
data = d$agree_to_peer_review_in_2020_how_many_manuscripts,
axis.title = c("How many manuscript(s) did you agree to review in 2020?")
)
# Render frequency plot
plot_frq(
data = d$time_to_peer_review_single_manuscript,
axis.title = c("How much time does it take you to review a single manuscript?")
)
# Render frequency plot
plot_frq(
data = d$agree_to_re_review_in_2020_how_many_manuscripts,
axis.title = c("How many manuscripts did you agree to re-review?")
)
# Render frequency plot
plot_frq(
data = d$time_to_re_review_single_manuscript,
axis.title = c("How much time does it take you to re-review a single manuscript?")
)
# Render frequency plot
plot_frq(
data = d$age,
axis.title = c("What is your age in years?")
)
# Render frequency plot
plot_frq(
data = d$asked_to_peer_review_how_often,
axis.title = c("How often are you asked to review a manuscript(s)?"),
coord.flip = TRUE
)
# Tweak plot settings
set_theme(
base = theme_minimal(),
geom.outline.color = "white",
geom.label.size = 1.75,
axis.angle.x = 45,
axis.textsize.x = 0.8,
axis.textsize.y = 0.8,
axis.title.size = 0.8
)
# Render frequency plot
plot_frq(
data = d$asked_to_peer_review_how_often,
axis.title = c("How often are you asked to review a manuscript(s)?")
)
?set_theme
?plot_frq
# Render frequency plot
plot_frq(
data = d$asked_to_peer_review_how_often,
axis.title = c("How often are you asked to review a manuscript(s)?"),
geom.colors = "red"
)
# Render frequency plot
plot_frq(
data = d$asked_to_peer_review_how_often,
axis.title = c("How often are you asked to review a manuscript(s)?"),
geom.colors = "#00AFBB"
)
runApp('C:/Users/joelb/OneDrive/GitHub/investment/joels-portfolio.R')
